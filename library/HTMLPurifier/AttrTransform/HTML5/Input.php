<?php

/**
 * Performs miscellaneous cross attribute validation and filtering for
 * HTML5 input elements. This is meant to be a post-transform.
 */
class HTMLPurifier_AttrTransform_HTML5_Input extends HTMLPurifier_AttrTransform
{
    /**
     * Allowed attributes vs input type lookup, based on https://validator.nu/
     * Generated by maintenance/generate-input-allowed.php script
     * @var array
     */
    protected static $allowed = array(
        'accept' => array(
            'file' => true,
        ),
        'alt' => array(
            'image' => true,
        ),
        'autocomplete' => array(
            'text' => true,
            'search' => true,
            'url' => true,
            'tel' => true,
            'email' => true,
            'password' => true,
            'date' => true,
            'month' => true,
            'week' => true,
            'time' => true,
            'datetime-local' => true,
            'number' => true,
            'range' => true,
            'color' => true,
        ),
        'checked' => array(
            'checkbox' => true,
            'radio' => true,
        ),
        'dirname' => array(
            'text' => true,
            'search' => true,
        ),
        'formaction' => array(
            'submit' => true,
            'image' => true,
        ),
        'formenctype' => array(
            'submit' => true,
            'image' => true,
        ),
        'formmethod' => array(
            'submit' => true,
            'image' => true,
        ),
        'formnovalidate' => array(
            'submit' => true,
            'image' => true,
        ),
        'formtarget' => array(
            'submit' => true,
            'image' => true,
        ),
        'height' => array(
            'image' => true,
        ),
        'list' => array(
            'text' => true,
            'search' => true,
            'url' => true,
            'tel' => true,
            'email' => true,
            'date' => true,
            'month' => true,
            'week' => true,
            'time' => true,
            'datetime-local' => true,
            'number' => true,
            'range' => true,
            'color' => true,
        ),
        'max' => array(
            'date' => true,
            'month' => true,
            'week' => true,
            'time' => true,
            'datetime-local' => true,
            'number' => true,
            'range' => true,
        ),
        'maxlength' => array(
            'text' => true,
            'search' => true,
            'url' => true,
            'tel' => true,
            'email' => true,
            'password' => true,
        ),
        'min' => array(
            'date' => true,
            'month' => true,
            'week' => true,
            'time' => true,
            'datetime-local' => true,
            'number' => true,
            'range' => true,
        ),
        'multiple' => array(
            'email' => true,
            'file' => true,
        ),
        'pattern' => array(
            'text' => true,
            'search' => true,
            'url' => true,
            'tel' => true,
            'email' => true,
            'password' => true,
        ),
        'placeholder' => array(
            'text' => true,
            'search' => true,
            'url' => true,
            'tel' => true,
            'email' => true,
            'password' => true,
            'number' => true,
        ),
        'readonly' => array(
            'text' => true,
            'search' => true,
            'url' => true,
            'tel' => true,
            'email' => true,
            'password' => true,
            'date' => true,
            'month' => true,
            'week' => true,
            'time' => true,
            'datetime-local' => true,
            'number' => true,
        ),
        'required' => array(
            'text' => true,
            'search' => true,
            'url' => true,
            'tel' => true,
            'email' => true,
            'password' => true,
            'date' => true,
            'month' => true,
            'week' => true,
            'time' => true,
            'datetime-local' => true,
            'number' => true,
            'checkbox' => true,
            'radio' => true,
            'file' => true,
        ),
        'size' => array(
            'text' => true,
            'search' => true,
            'url' => true,
            'tel' => true,
            'email' => true,
            'password' => true,
        ),
        'src' => array(
            'image' => true,
        ),
        'step' => array(
            'date' => true,
            'month' => true,
            'week' => true,
            'time' => true,
            'datetime-local' => true,
            'number' => true,
            'range' => true,
        ),
        'value' => array(
            'not file' => true,
            'image' => true,
        ),
        'width' => array(
            'image' => true,
        ),
    );

    /**
     * @param array $attr
     * @param HTMLPurifier_Config $config
     * @param HTMLPurifier_Context $context
     * @return array
     */
    public function transform($attr, $config, $context)
    {
        if (!isset($attr['type'])) {
            $t = 'text';
        } else {
            $t = strtolower($attr['type']);
        }

        foreach (self::$allowed as $a => $types) {
            if (isset($attr[$a]) && !isset($types[$t])) {
                unset($attr[$a]);
            }
        }

        // Non-empty 'alt' attribute is required for 'image' input
        if ($t === 'image' && !isset($attr['alt'])) {
            $alt = trim($config->get('Attr.DefaultImageAlt'));
            if (!strlen($alt)) {
                $alt = 'image';
            }
            $attr['alt'] = $alt;
        }

        // min and max values must satisfy the format of the input type

        return $attr;
    }
}
